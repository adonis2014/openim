<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.openim</groupId>
    <artifactId>openim</artifactId>
    <packaging>pom</packaging>
    <version>0.1</version>
    <modules>
        <module>openim-esb</module>
        <module>openim-chatserver</module>
        <module>openim-manager</module>
        <module>openim-common</module>
        <module>openim-emulator</module>
        <module>openim-fileserver</module>
    </modules>

    <properties>
        <netty.version>4.0.29.Final</netty.version>
        <openim.version>0.1</openim.version>
        <spring.boot.version>1.2.5.RELEASE</spring.boot.version>
        <spring.version>4.1.7.RELEASE</spring.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!--<scope>test</scope>-->
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.10</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.1.45</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.openim</groupId>
                <artifactId>openim-common-bean</artifactId>
                <version>${openim.version}</version>
            </dependency>
            <dependency>
                <groupId>com.openim</groupId>
                <artifactId>openim-common-im</artifactId>
                <version>${openim.version}</version>
            </dependency>
            <dependency>
                <groupId>com.openim</groupId>
                <artifactId>openim-common-util</artifactId>
                <version>${openim.version}</version>
            </dependency>
            <dependency>
                <groupId>com.openim</groupId>
                <artifactId>openim-common-zk</artifactId>
                <version>${openim.version}</version>
            </dependency>
            <dependency>
                <groupId>com.openim</groupId>
                <artifactId>openim-common-mq</artifactId>
                <version>${openim.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.5.1</version>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!-- 指定编码格式，否则在DOS下运行mvn命令时当发生文件资源copy时将使用系统默认使用GBK编码 -->
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <!--执行mvn deploy自动上传到本地的nexus仓库
        需在setting.xml中配置用户名和密码
        同一个包想重复上传（即版本号也保持不变）需在nexus的configuration中配置Deployment Policy
    -->
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Releases</name>
            <url>http://localhost:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Snapshots</name>
            <url>http://localhost:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
</project>