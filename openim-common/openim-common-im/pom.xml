<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>openim-common</artifactId>
        <groupId>com.openim</groupId>
        <version>0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.openim</groupId>
    <artifactId>openim-common-im</artifactId>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
            <version>2.13.0</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.grizzly</groupId>
            <artifactId>grizzly-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.xsocket</groupId>
            <artifactId>xSocket</artifactId>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <!--<type>bundle</type>-->
            <!--也会被打包 servlet-provided test-->
            <scope>compile</scope>
            <!--添加了type属性后需要添加version属性-->
            <version>${mina.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-integration-jmx</artifactId>
            <!--<type>bundle</type>-->
            <version>${mina.version}</version>
            <!--<scope>compile</scope>-->
            <exclusions>
                <exclusion>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-integration-beans</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-integration-ognl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-integration-beans</artifactId>
            <!--<type>bundle</type>-->
            <version>${mina.version}</version>
            <!--<scope>compile</scope>-->
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-integration-ognl</artifactId>
            <!--<type>bundle</type>-->
            <version>${mina.version}</version>
            <!--<scope>compile</scope>-->
        </dependency>
        <!--<dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-integration-spring</artifactId>
            <version>1.1.7</version>
            &lt;!&ndash;<exclusions>

                <exclusion>
                    <groupId>org.apache.mina</groupId>
                    <artifactId>mina-filter-ssl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-beans</artifactId>
                </exclusion>
            </exclusions>&ndash;&gt;
        </dependency>-->


        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro</artifactId>
            <version>1.7.7</version>
            <scope>test</scope>
        </dependency>

        <!--
            java:https://github.com/EsotericSoftware/kryo
            ios: https://github.com/Feuerwerk/kryococoa
        -->
        <dependency>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
            <version>2.16</version>
            <scope>test</scope>
            <!--<version>3.0.2</version>-->
        </dependency>


        <dependency>
            <groupId>org.msgpack</groupId>
            <artifactId>msgpack</artifactId>
            <version>0.6.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
            <version>0.9.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>

        <plugins>


            <plugin>
                <!--https://github.com/igor-petruk/protobuf-maven-plugin.git-->
                <groupId>com.github.igor-petruk.protobuf</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.5</version>
                <configuration>
                    <extension>.proto</extension>
                    <inputDirectories>
                        <inputDirectory>src/main/exchange/proto</inputDirectory>
                    </inputDirectories>
                    <cleanOutputFolder>false</cleanOutputFolder>
                    <outputDirectory>src/main/java</outputDirectory>
                    <protocCommand>protoc/protoc-${protobuf.version}.exe</protocCommand>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>1.7.7</version>
                <configuration>
                    <sourceDirectory>src/test/exchange/avro</sourceDirectory>
                    <outputDirectory>src/test/java</outputDirectory>
                </configuration>
                <!--以下官网的配置需要通过mvn generate-sources生成源码，直接在intellij中运行，configuration中配置无效-->
                <!--<executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>${project.basedir}/src/main/avro</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
                            &lt;!&ndash;<sourceDirectory>${project.basedir}/src/main/exchange/avro/</sourceDirectory>
                            <outputDirectory>${project.basedir}/src/main/java/</outputDirectory>&ndash;&gt;
                        </configuration>
                    </execution>
                </executions>-->
            </plugin>

            <!--修改版，增加参数cleanOutputDirectory，不删除输出目录下已存在文件
                插件地址：https://github.com/shihuacai1989/maven-thrift-plugin-->
            <plugin>
                <groupId>org.apache.thrift.tools</groupId>
                <artifactId>thrift-maven-plugin</artifactId>
                <version>0.1.13-SNAPSHOT</version>
                <configuration>
                    <!--会自动删除原目录下的文件，如何屏蔽？？-->
                    <outputDirectory>src/test/java</outputDirectory>
                    <thriftExecutable>thrift/thrift-0.9.2.exe</thriftExecutable>
                    <thriftSourceRoot>src/test/exchange/thrift</thriftSourceRoot>
                    <cleanOutputDirectory>false</cleanOutputDirectory>
                </configuration>
            </plugin>

            <!--插件会先删除输出目录下的文件-->
            <!--<plugin>
                <groupId>org.apache.thrift.tools</groupId>
                <artifactId>maven-thrift-plugin</artifactId>
                <version>0.1.11</version>
                <configuration>
                    &lt;!&ndash;会自动删除原目录下的文件，如何屏蔽？？&ndash;&gt;
                    <outputDirectory>src/main/thrift</outputDirectory>
                    <thriftExecutable>thrift/thrift-0.9.2.exe</thriftExecutable>
                    <thriftSourceRoot>src/main/exchange/thrift</thriftSourceRoot>
                </configuration>
            </plugin>-->

        </plugins>

    </build>


    <!--<profiles>
        <profile>
            <id>protobuf</id>
            <build>
                <plugins>

                    <plugin>
                        &lt;!&ndash;https://github.com/igor-petruk/protobuf-maven-plugin.git&ndash;&gt;
                        <groupId>com.github.igor-petruk.protobuf</groupId>
                        <artifactId>protobuf-maven-plugin</artifactId>
                        <version>0.6.5</version>

                        &lt;!&ndash;root中的junit为test, -DskipTests无效，why???&ndash;&gt;
                        <dependencies>
                            <dependency>
                                <groupId>junit</groupId>
                                <artifactId>junit</artifactId>
                                <scope>runtime</scope>
                                <version>4.10</version>
                            </dependency>
                        </dependencies>
                        <executions>
                            &lt;!&ndash;<execution>
                                <id>compile-protoc-test</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>&ndash;&gt;
                            <execution>
                                <id>compile-protoc-main</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                &lt;!&ndash;<configuration>
                                    <inputDirectories>
                                        <inputDirectory>src/main/exchange/proto</inputDirectory>
                                    </inputDirectories>
                                    <cleanOutputFolder>false</cleanOutputFolder>
                                    <outputDirectory>src/main/java</outputDirectory>
                                    <protocCommand>protoc/protoc-${protobuf.version}.exe</protocCommand>
                                </configuration>&ndash;&gt;
                            </execution>
                        </executions>
                        <configuration>
                            <inputDirectories>
                                <inputDirectory>src/main/exchange/proto</inputDirectory>
                            </inputDirectories>
                            <cleanOutputFolder>false</cleanOutputFolder>
                            <outputDirectory>src/main/java</outputDirectory>
                            <protocCommand>protoc/protoc-${protobuf.version}.exe</protocCommand>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>-->
</project>